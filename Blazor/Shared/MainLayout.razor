@inherits LayoutComponentBase
@using System.Web
@inject NavigationManager NavManager
@using  System.Globalization
@inject IJSRuntime JS
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.Localization
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor


        <RefTop RefTopObj="@refTopObj"/>

    <!--For AppTop, change the following component to AppTOp-->
    <Top TopObj = "@topObj"/>
    <!--<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>-->

    @if(@topObj.TopSecMenu)
    {
        <SectionMenu LeftMenuItems = "@leftMenuObj"/>
    }
    <main id="cdts-main" property="mainContentOfPage" typeof="WebPageElement" class="@(@topObj.TopSecMenu? "col-md-9" : "container")">
            <NavLink href="" Match="NavLinkMatch.All">
                <button class="btn">Home</button>
            </NavLink>
            <NavLink href="counter">
                <button class="btn">Counter</button>
            </NavLink>
            <NavLink href="fetchdata">
                <button class="btn">Fetch Data</button>
            </NavLink>
            
            <SelectUICulture/>



            <button class="btn" @onclick="AddSearch">Add Search</button>
            <button class="btn" @onclick="AddFooter">Add Footer</button>
            <button class="btn" @onclick="AddLeftMenu">Add left Menu</button>
            <button class="btn" @onclick="AddLanguageLink">Add Language Link</button>
        @Body
        <PreFooter PreFooterObj = "@obj"/>
    </main>

    <Footer FooterObj = "@footerObj"/>
    <RefFooter RefFooterObj = "@refFooterObj"/>

    <!--<Setup SetupObj = "@setup"/>
    <div id="cdts-def-top"></div>
    <main property="mainContentOfPage" typeof="WebPageElement" class="container">
        <button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
        <button class="btn" @onclick="AddFooter">Add Footer</button>
        @Body
        <div id="cdts-def-preFooter">
        </div>
    </main>
    <div id="cdts-def-footer"></div>-->

@code{




    //For AppTop, change the following: 
    Blazor.Model.Top topObj { get; set; } = new Blazor.Model.Top();

    protected override Task OnInitializedAsync()
    {
        //JS.InvokeVoidAsync("installCDTS", CultureInfo.CurrentCulture.Parent.IetfLanguageTag);
        topObj.Breadcrumbs = new List<Breadcrumb>
        {
            new Breadcrumb(){Href="", Title="CDTS", Acronym="CDTS"}
        };

        //For AppTop, comment the following:
        topObj.SiteMenu = true;

        topObj.LngLinks = new List<LanguageLink>
        {
            new LanguageLink(){Href=Navigation.Uri + "/ChangeLang"}
        };

        //For AppTop, uncomment the following:
        //topObj.AppName = new List<Link>() { new Link() { Text = "App name" } };

        return base.OnInitializedAsync();
    }

    public void AddSearch()
    {
        topObj.Search = true;
    }
    public void AddFooter()
    {
        //For AppTop, change the following:
        footerObj.ShowFooter = true;

        /*footerObj.ContactLink = new List<Link>
        {
            new Link { Href = "http://travel.gc.ca/", Text = "Contact Now" },
            new Link { Href = "http://travel.gc.ca/", Text = "Contact Info" }
        };*/
    }



    private void IncrementCount()
    {
        topObj.CdnEnv = "canada";
    }

    Blazor.Model.PreFooter obj = new Blazor.Model.PreFooter()
    {
        DateModified = "July 18th, 2023"
    };

    //For AppFooter, change the following
    Blazor.Model.Footer footerObj = new Blazor.Model.Footer()
    {

    };

    Blazor.Model.RefFooter refFooterObj = new Blazor.Model.RefFooter()
    {
        ExitSecureSite = new ExitSecureSite()
        {
            ExitScript = true,
            DisplayModal = true

        }
    };

    Blazor.Model.RefTop refTopObj = new Blazor.Model.RefTop()
        {
            //For AppTop, uncomment the following:
            //IsApplication = true
    };

    List<GoC.WebTemplate.Components.Entities.MenuSection> leftMenuObj;

    private void AddLeftMenu()
    {
        topObj.TopSecMenu = true;

        var item = new MenuItem
        {
            Href = "http://www.tsn.ca",
            Text = "TSN",
            SubItems = new List<Link> {
                new Link { Href="http://www.cbc.ca", Text="sub 1", NewWindow= true },
                new Link { Href="http://www.rds.ca", Text="sub 2" }
            }
        };

        leftMenuObj = new List<MenuSection>
        {
            new MenuSection
            {
                Text = "Section A",
                Href = "http://www.servicecanada.gc.ca",
                NewWindow = true,
                Items = new List<MenuItem> {
                    item,
                    new MenuItem { Href = "http://www.cnn.ca", Text = "CNN" }
                }
            }
        };
    }

    /*[JSInvokable]
    public void ChangeLang()
    {
        var js = (IJSInProcessRuntime)JS;
        if (CultureInfo.CurrentCulture.DisplayName == "en (CA)") js.InvokeVoid("blazorCulture.set", "fr-CA");
        else js.InvokeVoid("blazorCulture.set", "en-CA");
        //reload top
        Navigation.NavigateTo(Navigation.Uri, forceLoad: true);
    }*/

}
